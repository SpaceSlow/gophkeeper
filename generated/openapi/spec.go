// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package openapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
